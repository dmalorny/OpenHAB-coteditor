metadata:
  version: "0.1"
  author: "dmalorny"
  license: "MIT"
  lastModified: "2019-05-22"
  description: "Work in progress..."
  distributionURL: "https://github.com/dmalorny/OpenHAB-coteditor"
strings:
- beginString: "\""
  endString: "\""
characters:
- beginString: "'"
  endString: "'"
comments: []
keywords:
- beginString: "abstract"
- beginString: "assert"
- beginString: "break"
- beginString: "case"
- beginString: "catch"
- beginString: "class"
- beginString: "continue"
- beginString: "default"
- beginString: "do"
- beginString: "else"
- beginString: "enum"
- beginString: "extends"
- beginString: "final"
- beginString: "finally"
- beginString: "for"
- beginString: "if"
- beginString: "implements"
- beginString: "import"
- beginString: "instanceof"
- beginString: "interface"
- beginString: "native"
- beginString: "new"
- beginString: "package"
- beginString: "private"
- beginString: "protected"
- beginString: "public"
- beginString: "return"
- beginString: "static"
- beginString: "strictfp"
- beginString: "switch"
- beginString: "synchronized"
- beginString: "throw"
- beginString: "throws"
- beginString: "transient"
- beginString: "try"
- beginString: "volatile"
- beginString: "while"
variables:
- beginString: "super"
- beginString: "this"
extensions:
- keyString: "script"
attributes: []
values:
- beginString: "\\b[A-Z][A-Z0-9_]+\\b"
  regularExpression: true
- beginString: "false"
- beginString: "NaN"
- beginString: "null"
- beginString: "true"
commands:
- beginString: "(?<=\\.)[a-z$_][a-zA-Z0-9$_]*(?=\\()"
  regularExpression: true
- beginString: "logDebug"
- beginString: "logInfo"
- beginString: "postUpdate"
- beginString: "sendCommand"
outlineMenu:
- beginString: "^([\\t ]*)(class)(.*?)(?=(\\{|$))"
  bold: true
  keyString: "$1$2 : $3"
  description: "class"
- beginString: "^([\\t ]*)(private)[\\t ]+(.*)(?=\\{)"
  description: "private"
- beginString: "^([\\t ]*)(protected)[\\t ]+(.*)(?=\\{)"
  description: "protected"
- beginString: "^([\\t ]*)(public)[\\t ]+(.*)(?=\\{)"
  description: "public"
numbers:
- beginString: "\\b((\\d+\\.\\d*)|(\\.\\d+))(e[-+]?\\d+)?([lfud]|ul)?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b0b[01_]+([lfud]|ul)?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b0x[0-9a-f_]+([lfud]|ul)?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b[0-9_]+([lfud]|ul)?\\b"
  ignoreCase: true
  regularExpression: true
commentDelimiters:
  endDelimiter: "*/"
  beginDelimiter: "/*"
  inlineDelimiter: "//"
types:
- beginString: "boolean"
- beginString: "byte"
- beginString: "char"
- beginString: "double"
- beginString: "float"
- beginString: "int"
- beginString: "long"
- beginString: "short"
- beginString: "String"
- beginString: "var"
- beginString: "void"
